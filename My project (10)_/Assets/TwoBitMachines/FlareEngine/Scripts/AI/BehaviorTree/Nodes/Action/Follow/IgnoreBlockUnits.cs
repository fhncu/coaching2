#region 
#if UNITY_EDITOR
using TwoBitMachines.Editors;
using UnityEditor;
#endif
#endregion
using TwoBitMachines.FlareEngine.AI.BlackboardData;
using UnityEngine;

namespace TwoBitMachines.FlareEngine.AI
{
      [AddComponentMenu ("")]
      public class IgnoreBlockUnits : Action
      {
            [SerializeField] public Blackboard pathfinding;
            [SerializeField] public bool ignoreUnits;

            public override NodeState RunNodeLogic (Root root)
            {
                  if (pathfinding == null) return NodeState.Success;
                  pathfinding.IgnoreBlock (ignoreUnits);
                  return NodeState.Success;
            }

            #region ▀▄▀▄▀▄ Editor Variables ▄▀▄▀▄▀
            #if UNITY_EDITOR
            #pragma warning disable 0414
            public bool foldOutEvent;
            public override bool HasNextState ( ) { return false; }
            public override bool OnInspector (AIBase ai, SerializedObject parent, Color color, bool onEnable)
            {
                  if (parent.Bool ("showInfo"))
                  {
                        Labels.InfoBoxTop (75, "The AI will ignore or block other AI units along the path generated by the pathfinding algorithm. This will not work with Basic Pathfinding" +
                              "\n \n Returns Success");
                  }

                  FoldOut.Box (2, color, yOffset: -2);
                  AIBase.SetRef (ai.data, parent.Get ("pathfinding"), 0);
                  parent.Field ("Ignore", "ignoreUnits");
                  Layout.VerticalSpacing (3);
                  return true;
            }
            #pragma warning restore 0414
            #endif
            #endregion
      }
}